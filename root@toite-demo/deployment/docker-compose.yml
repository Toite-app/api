version: "3.8"
name: "toite"

services:
  # Running mongo database
  mongo:
    container_name: mongo
    build:
      context: mongo
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: toite
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      toite-network:
        ipv4_address: 172.36.0.3
    volumes:
      - "mongo-data:/data/db"

  # Running simple postgres database
  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    environment:
      PGDATA: /data/postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      toite-network:
        ipv4_address: 172.36.0.4
    volumes:
      - "postgres-data:/data/postgres"

  # Running redis cache
  redis:
    container_name: redis
    image: redis:6.2-alpine
    command: redis-server --save 20 1 --loglevel warning --requirepass "${REDIS_PASSWORD}"
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      toite-network:
        ipv4_address: 172.36.0.5
    volumes:
      - "redis-data:/data"

  api:
    container_name: toite-api
    image: ${API_REPO_IMAGE:-yefro/toite-backend:latest}
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGO_URL: mongodb://toite:${MONGO_PASSWORD}@172.36.0.3:27017/toite?authSource=admin&directConnection=true
      POSTGRESQL_URL: postgres://postgres:${POSTGRES_PASSWORD}@172.36.0.4:5432/toite
      JWT_SECRET: ${JWT_SECRET}
      CSRF_SECRET: ${CSRF_SECRET}
      SESSION_EXPIRES_IN: 4h
      INITIAL_ADMIN_PASSWORD: ${INITIAL_ADMIN_PASSWORD}
      DADATA_API_TOKEN: ${DADATA_API_TOKEN}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      REDIS_URL: redis://:${REDIS_PASSWORD}@172.36.0.5:6379
      COOKIES_SECRET: ${COOKIES_SECRET}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_REGION: ${S3_REGION}
    ports:
      - "5000:5000"
    networks:
      toite-network:
        ipv4_address: 172.36.0.10
    depends_on:
      - redis
      - postgres
      - mongo

volumes:
  # Mongo data storage
  mongo-data:
    driver: local
  # Postgres data storage
  postgres-data:
    driver: local
  # Redis data storage
  redis-data:
    driver: local

networks:
  # Shared network
  toite-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.36.0.0/16
          gateway: 172.36.0.1
